////////////////////////////////////
//此文件为bag模块的简单使用教程
////////////////////////////////////

INCLUDE gyc.ink
INCLUDE array.ink
INCLUDE bag.ink
INCLUDE bag_ui.ink
-> init

== init ==
清注意，本模块适合含有一定经验的用户使用
VAR entity_01 = 0
~ entity_01 = array()
```
"VAR entity_01 = 0"
"~ entity_01 = array()"
创建一个空数组作为实体
————————————————————
entity_01
——【】
————————————————————
```
~ entity_01.Create_entity_and_bag("bag_1","player","number_limited",32)

```
"~ entity_01.Create_entity_and_bag("bag_1","player","number_limited",32)"
这里先构建了实体数组的内部结构
————————————————————
entity_01
——【
....dict
....——【】
....array
....——【】
...】
————————————————————
再为entity_01创建一个背包
————————————————————
entity_01
——【
....dict
....——【
........“bag_1”：0
.......】
....array
....——【
........bag_1
........——【】
.......】
...】
————————————————————
然后构建bag数组的内部结构,定义背包属性
————————————————————
entity_01
——【
....dict
....——【
........“bag_1”：0
.......】
....array
....——【
........bag_1
........——【
............dict
............——【
................“owner_type”:
..................“player”
................“storage_mode”:
...................“number-limited” 
................“space”:
..................32
...............】
............array
............——【】
............dict
............——【】
...........】
.......】
...】
————————————————————
```

~ entity_01.Add_item_attributes("bag_1",array("name","number","price"),0)
！建议起相同长度的属性名和物品名！

```
"~ entity_01.Add_item_attributes("bag_1",array("name","number","price"),0)"
创建了3个物品属性，他们将被存放在bag的dict中
————————————————————
entity_01
——【
....dict
....——【
........“bag_1”：0
.......】
....array
....——【
........bag_1
........——【
............dict
............——【
................“owner_type”:
..................“player”
................“storage_mode”:
...................“number-limited” 
................“space”:
..................32
...............】
............array
............——【】
............dict
............——【
................“name”：0
................“number”：1
................“price”：2
...............】
...........】
.......】
...】
————————————————————
```
~ entity_01.Add_item_void_line("bag_1",3)

```
"~ entity_01.Add_item_void_line("bag_1",3)"
无视背包容量，直接为背包数组增加3行全部为0的元素
————————————————————
entity_01
——【
....dict
....——【
........“bag_1”：0
.......】
....array
....——【
........bag_1
........——【
............dict
............——【
................“owner_type”:
..................“player”
................“storage_mode”:
...................“number-limited” 
................“space”:
..................32
...............】
............array
............——【
...............【0,0,0,
................0,0,0,
................0,0,0】
...............】
............dict
............——【
................“name”：0
................“number”：1
................“price”：2
...............】
...........】
.......】
...】
————————————————————
```
~ entity_01.Set_item_line("bag_1",0,array("大宝剑口口",1,199),0)
~ entity_01.Set_item_attribute_value("bag_1",1,"name","布衣口口口")
```
"~ entity_01.Set_item_line("bag_1",0,array("大宝剑",1,199),0)"
无视背包容量，强制改写背包数组的第0行数据
（最后一个参数必须是0）
"~ entity_01.Set_item_attribute_value("bag_1",1,"name","布衣")"
无视背包容量，强制改写背包数组的第1行的“name”属性对应背包数组的列的元素为字符串“布衣”
意思就是，1确定行，"name"在背包字典找到的0对应列，也就是设置（0，1）元素是“布衣”
————————————————————
entity_01
——【
....dict
....——【
........“bag_1”：0
.......】
....array
....——【
........bag_1
........——【
............dict
............——【
................“owner_type”:
..................“player”
................“storage_mode”:
...................“number-limited” 
................“space”:
..................32
...............】
............array
............——【
...............【“大宝剑”,1,199,
................“布衣”,0,0,
................0,0,0】
...............】
............dict
............——【
................“name”：0
................“number”：1
................“price”：2
...............】
...........】
.......】
...】
————————————————————
```


"entity_01.Get_item_line("bag_1",0)"
```
{entity_01.Get_item_line("bag_1",0).str()}
```
以数组形式返回背包数组的0行数据
---------------------------
"entity_01.Get_item_attribute_value("bag_1",0,"price")"
```
{entity_01.Get_item_attribute_value("bag_1",0,"price")}
```
返回背包数组的0行的“price”列的元素

以上介绍了bag模块部分基本方法的使用，如果需要知道更多内容，请移步至bag.ink文件

-> show_bag(entity_01,"bag_1") ->

-> END
